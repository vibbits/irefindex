---
- name: Irdownload
  hosts: localhost
  become: true
  vars:
    # All sources that should be downloaded
    jobs:
      - bind_translation
      - biogrid
      - corum
      - dip
      - hprd
      - intact
      - intcomplex
      - mpact
      - mppi
      - bar
      - bhf_ucl
      - hpidb
      - huri
      - imex
      - innatedb
      - matrixdb
      - mbinfo
      - mint
      - mpidb
      - quickgo
      - reactome
      - uniprotpp
      - virushost
      - psi_mi
      - taxonomy
      - athaliana
      - bind
      - dig
      - fly
      - gene
      - genpept
      - ipi
      - mmdb
      - pdb
      - refseq
      - uniprot
      - yeast

  tasks:
    - name: Update apt packages
      ansible.builtin.apt:
        update_cache: true

    - name: Install required packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - gnupg
        - curl
        - sudo

    - name: Add Google Cloud SDK repository
      ansible.builtin.lineinfile:
        dest: /etc/apt/sources.list.d/google-cloud-sdk.list
        line: "deb [signed-by=/usr/share/keyrings/cloud.google.asc] https://packages.cloud.google.com/apt cloud-sdk main"
        create: true
        mode: "0644"

    - name: Download Google Cloud SDK key
      ansible.builtin.get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /usr/share/keyrings/cloud.google.asc
        mode: "0644"

    # - name: Import Google Cloud SDK key
    #   ansible.builtin.shell: "curl https://packages.cloud.google.com/apt/doc/apt-key.gpg 2>/dev/null | sudo tee /usr/share/keyrings/cloud.google.asc"
    #   args:
    #     creates: /usr/share/keyrings/cloud.google.asc

    - name: Update apt packages with Google Cloud SDK repository
      ansible.builtin.apt:
        update_cache: true
        force_apt_get: true

    # TODO: Figure out why this doesn't work
    # - name: Install Google Cloud CLI
    #   ansible.builtin.apt:
    #     name: google-cloud-sdk
    #     state: present

    - name: Run jobs
      ansible.builtin.command: "./irdownload {{ item }}"
      args:
        chdir: "/home/irefindex/usr/bin"
      async: 3600
      poll: 0
      loop: "{{ jobs }}"
      register: result
      changed_when: false

    - name: Wait for jobs to complete
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 36
      delay: 5
      loop: "{{ result.results }}"

    - name: "Ensure that /data/irdata18/logs/irdownload/ exists"
      ansible.builtin.file:
        path: "/data/irdata18/logs/irdownload/"
        state: directory
        mode: "0755"

    - name: "Copy logs"
      ansible.builtin.copy:
        content: item.stdout
        dest: "/data/irdata18/logs/irdownload/{{ item.async_job.name }}.log"
        mode: "0644"
      when: item.finished
      loop: "{{ result.results }}"

    - name: "Copy error logs"
      ansible.builtin.copy:
        content: item.stderr
        dest: "/data/irdata18/logs/irdownload/{{ item.async_job.name }}.err.log"
        mode: "0644"
      when: item.finished
      loop: "{{ result.results }}"
    #
    # - name: Download IR data - BIND_TRANSLATION
    #   ansible.builtin.command: "./irdownload BIND_TRANSLATION"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   delay: 5
    #   async: 30
    #   poll: 0
    #   register: result_bind_translation
    #
    # - name: Download IR data - BIOGRID
    #   ansible.builtin.command: "./irdownload BIOGRID"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   delay: 5
    #   async: 60
    #   poll: 0
    #   register: result_biogrid
    #
    # - name: Download IR data - CORUM
    #   command: "./irdownload CORUM"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 60
    #   poll: 0
    #   register: result_corum
    #
    # - name: Download IR data - DIP
    #   command: "./irdownload DIP"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_dip
    #
    # - name: Download IR data - HPRD
    #   command: "./irdownload HPRD"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_hprd
    #
    # - name: Download IR data - INTACT
    #   command: "./irdownload INTACT"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_intact
    #
    # - name: Download IR data - INTCOMPLEX
    #   command: "./irdownload INTCOMPLEX"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_intcomplex
    #
    # - name: Download IR data - MPACT
    #   command: "./irdownload MPACT"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_mpact
    #
    # - name: Download IR data - MPPI
    #   command: "./irdownload MPPI"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_mppi
    #
    # - name: Download IR data - BAR
    #   command: "./irdownload BAR"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_bar
    #
    # - name: Download IR data - BHF_UCL
    #   command: "./irdownload BHF_UCL"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_bhf_ucl
    #
    # - name: Download IR data - HPIDB
    #   command: "./irdownload HPIDB"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_hpidb
    #
    # - name: Download IR data - HURI
    #   command: "./irdownload HURI"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 60
    #   poll: 0
    #   register: result_huri
    #
    # - name: Download IR data - IMEX
    #   command: "./irdownload IMEX"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 10800
    #   poll: 0
    #   register: result_imex
    #
    # - name: Download IR data - INNATEDB
    #   command: "./irdownload INNATEDB"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_innatedb
    #
    # - name: Download IR data - MATRIXDB
    #   command: "./irdownload MATRIXDB"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 300
    #   poll: 0
    #   register: result_matrixdb
    #
    # - name: Download IR data - MBINFO
    #   command: "./irdownload MBINFO"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_mbinfo
    #
    # - name: Download IR data - MINT
    #   command: "./irdownload MINT"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 600
    #   poll: 0
    #   register: result_mint
    #
    # - name: Download IR data - MPIDB
    #   command: "./irdownload MPIDB"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_mpidb
    #
    # - name: Download IR data - QUICKGO
    #   command: "./irdownload QUICKGO"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_quickgo
    #
    # - name: Download IR data - REACTOME
    #   command: "./irdownload REACTOME"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 300
    #   poll: 0
    #   register: result_reactome
    #
    # - name: Download IR data - UNIPROTPP
    #   command: "./irdownload UNIPROTPP"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 300
    #   poll: 0
    #   register: result_uniprotpp
    #
    # - name: Download IR data - VIRUSHOST
    #   command: "./irdownload VIRUSHOST"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 60
    #   poll: 0
    #   register: result_virushost
    #
    # - name: Download IR data - PSI_MI
    #   command: "./irdownload PSI_MI"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_psi_mi
    #
    # - name: Download IR data - TAXONOMY
    #   command: "./irdownload TAXONOMY"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 60
    #   poll: 0
    #   register: result_taxonomy
    #
    # - name: Download IR data - ATHALIANA
    #   command: "./irdownload ATHALIANA"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_athaliana
    #
    # - name: Download IR data - BIND
    #   command: "./irdownload BIND"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_bind
    #
    # - name: Download IR data - DIG
    #   command: "./irdownload DIG"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_dig
    #
    # - name: Download IR data - FLY
    #   command: "./irdownload FLY"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_fly
    #
    # - name: Download IR data - GENE
    #   command: "./irdownload GENE"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 600
    #   poll: 0
    #   register: result_gene
    #
    # - name: Download IR data - GENPEPT
    #   command: "./irdownload GENPEPT"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 36000
    #   poll: 0
    #   register: result_genpept
    #
    # - name: Download IR data - IPI
    #   command: "./irdownload IPI"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 30
    #   poll: 0
    #   register: result_ipi
    #
    # - name: Download IR data - MMDB
    #   command: "./irdownload MMDB"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 60
    #   poll: 0
    #   register: result_mmdb
    #
    # - name: Download IR data - PDB
    #   command: "./irdownload PDB"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 60
    #   poll: 0
    #   register: result_pdb
    #
    # - name: Download IR data - REFSEQ
    #   command: "./irdownload REFSEQ"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 36000
    #   poll: 0
    #   register: result_refseq
    #
    # - name: Download IR data - UNIPROT
    #   command: "./irdownload UNIPROT"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 60
    #   poll: 0
    #   register: result_uniprot
    #
    # - name: Download IR data - YEAST
    #   command: "./irdownload YEAST"
    #   args:
    #     chdir: "/home/irefindex/usr/bin"
    #   ignore_errors: true
    #   retries: 3
    #   async: 60
    #   poll: 0
    #   register: result_yeast
    #
    # - name: Wait for BIND TRANSLATION to complete
    #   async_status:
    #     jid: "{{ result_bind_translation.ansible_job_id }}"
    #   register: job_result_1
    #   until: job_result_1.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for BIOGRID to complete
    #   async_status:
    #     jid: "{{ result_biogrid.ansible_job_id }}"
    #   register: job_result_2
    #   until: job_result_2.finished
    #   retries: 12
    #   delay: 15
    #   ignore_errors: true
    #
    # - name: Wait for CORUM to complete
    #   async_status:
    #     jid: "{{ result_corum.ansible_job_id }}"
    #   register: job_result_3
    #   until: job_result_3.finished
    #   retries: 12
    #   delay: 15
    #   ignore_errors: true
    #
    # - name: Wait for DIP to complete
    #   async_status:
    #     jid: "{{ result_dip.ansible_job_id }}"
    #   register: job_result_4
    #   until: job_result_4.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for HPRD to complete
    #   async_status:
    #     jid: "{{ result_hprd.ansible_job_id }}"
    #   register: job_result_5
    #   until: job_result_5.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for INTACT to complete
    #   async_status:
    #     jid: "{{ result_intact.ansible_job_id }}"
    #   register: job_result_6
    #   until: job_result_6.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for INTCOMPLEX to complete
    #   async_status:
    #     jid: "{{ result_intcomplex.ansible_job_id }}"
    #   register: job_result_6
    #   until: job_result_6.finished
    #   retries: 6
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for MPACT to complete
    #   async_status:
    #     jid: "{{ result_mpact.ansible_job_id }}"
    #   register: job_result_7
    #   until: job_result_7.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for MPPI to complete
    #   async_status:
    #     jid: "{{ result_mppi.ansible_job_id }}"
    #   register: job_result_8
    #   until: job_result_8.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for BAR to complete
    #   async_status:
    #     jid: "{{ result_bar.ansible_job_id }}"
    #   register: job_result_9
    #   until: job_result_9.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for BHF_UCL to complete
    #   async_status:
    #     jid: "{{ result_bhf_ucl.ansible_job_id }}"
    #   register: job_result_10
    #   until: job_result_10.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for HPIDB to complete
    #   async_status:
    #     jid: "{{ result_hpidb.ansible_job_id }}"
    #   register: job_result_11
    #   until: job_result_11.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for IMEX to complete
    #   async_status:
    #     jid: "{{ result_imex.ansible_job_id }}"
    #   register: job_result_12
    #   until: job_result_12.finished
    #   retries: 108
    #   delay: 300
    #   ignore_errors: true
    #
    # - name: Wait for INNATEDB to complete
    #   async_status:
    #     jid: "{{ result_innatedb.ansible_job_id }}"
    #   register: job_result_13
    #   until: job_result_13.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for MATRIXDB to complete
    #   async_status:
    #     jid: "{{ result_matrixdb.ansible_job_id }}"
    #   register: job_result_14
    #   until: job_result_14.finished
    #   retries: 30
    #   delay: 30
    #   ignore_errors: true
    #
    # - name: Wait for MBINFO to complete
    #   async_status:
    #     jid: "{{ result_mbinfo.ansible_job_id }}"
    #   register: job_result_15
    #   until: job_result_15.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for MINT to complete
    #   async_status:
    #     jid: "{{ result_mint.ansible_job_id }}"
    #   register: job_result_16
    #   until: job_result_16.finished
    #   retries: 60
    #   delay: 30
    #   ignore_errors: true
    #
    # - name: Wait for MPIDB to complete
    #   async_status:
    #     jid: "{{ result_mpidb.ansible_job_id }}"
    #   register: job_result_17
    #   until: job_result_17.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for QUICKGO to complete
    #   async_status:
    #     jid: "{{ result_quickgo.ansible_job_id }}"
    #   register: job_result_18
    #   until: job_result_18.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for REACTOME to complete
    #   async_status:
    #     jid: "{{ result_reactome.ansible_job_id }}"
    #   register: job_result_19
    #   until: job_result_19.finished
    #   retries: 30
    #   delay: 30
    #   ignore_errors: true
    #
    # - name: Wait for UNIPROTPP to complete
    #   async_status:
    #     jid: "{{ result_uniprotpp.ansible_job_id }}"
    #   register: job_result_20
    #   until: job_result_20.finished
    #   retries: 30
    #   delay: 30
    #   ignore_errors: true
    #
    # - name: Wait for VIRUSHOST to complete
    #   async_status:
    #     jid: "{{ result_virushost.ansible_job_id }}"
    #   register: job_result_21
    #   until: job_result_21.finished
    #   retries: 36
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for PSI_MI to complete
    #   async_status:
    #     jid: "{{ result_psi_mi.ansible_job_id }}"
    #   register: job_result_22
    #   until: job_result_22.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for TAXONOMY to complete
    #   async_status:
    #     jid: "{{ result_taxonomy.ansible_job_id }}"
    #   register: job_result_23
    #   until: job_result_23.finished
    #   retries: 36
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for ATHALIANA to complete
    #   async_status:
    #     jid: "{{ result_athaliana.ansible_job_id }}"
    #   register: job_result_24
    #   until: job_result_24.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for BIND to complete
    #   async_status:
    #     jid: "{{ result_bind.ansible_job_id }}"
    #   register: job_result_25
    #   until: job_result_25.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for DIG to complete
    #   async_status:
    #     jid: "{{ result_dig.ansible_job_id }}"
    #   register: job_result_26
    #   until: job_result_26.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for FLY to complete
    #   async_status:
    #     jid: "{{ result_fly.ansible_job_id }}"
    #   register: job_result_27
    #   until: job_result_27.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for GENE to complete
    #   async_status:
    #     jid: "{{ result_gene.ansible_job_id }}"
    #   register: job_result_28
    #   until: job_result_28.finished
    #   retries: 60
    #   delay: 30
    #   ignore_errors: true
    #
    # - name: Wait for GENPEPT to complete
    #   async_status:
    #     jid: "{{ result_genpept.ansible_job_id }}"
    #   register: job_result_29
    #   until: job_result_29.finished
    #   retries: 60
    #   delay: 1800
    #   ignore_errors: true
    #
    # - name: Wait for IPI to complete
    #   async_status:
    #     jid: "{{ result_ipi.ansible_job_id }}"
    #   register: job_result_30
    #   until: job_result_30.finished
    #   retries: 18
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for MMDB to complete
    #   async_status:
    #     jid: "{{ result_mmdb.ansible_job_id }}"
    #   register: job_result_31
    #   until: job_result_31.finished
    #   retries: 36
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for PDB to complete
    #   async_status:
    #     jid: "{{ result_pdb.ansible_job_id }}"
    #   register: job_result_32
    #   until: job_result_32.finished
    #   retries: 36
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for REFSEQ to complete
    #   async_status:
    #     jid: "{{ result_refseq.ansible_job_id }}"
    #   register: job_result_33
    #   until: job_result_33.finished
    #   retries: 60
    #   delay: 1800
    #   ignore_errors: true
    #
    # - name: Wait for UNIPROT to complete
    #   async_status:
    #     jid: "{{ result_uniprot.ansible_job_id }}"
    #   register: job_result_34
    #   until: job_result_34.finished
    #   retries: 36
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: Wait for YEAST to complete
    #   async_status:
    #     jid: "{{ result_yeast.ansible_job_id }}"
    #   register: job_result_35
    #   until: job_result_35.finished
    #   retries: 36
    #   delay: 5
    #   ignore_errors: true
    #
    # - name: "Ensure that /data/irdata18/logs/irdownload/ exists"
    #   ansible.builtin.file:
    #     path: "/data/irdata18/logs/irdownload/"
    #     state: directory
    #     mode: "0755"
    #
    # - name: "Copy logs"
    #   ansible.builtin.copy:
    #     content: item.stdout
    #     dest: "/data/irdata18/logs/irdownload/{{ item.async_job.name }}.log"
    #     mode: "0644"
    #   until: item.finished
    #   loop:
    #     # TODO: there should be a better way...
    #     - job_result_1
    #     - job_result_2
    #     - job_result_3
    #     - job_result_4
    #     - job_result_5
    #     - job_result_6
    #     - job_result_7
    #     - job_result_8
    #     - job_result_9
    #     - job_result_10
    #     - job_result_11
    #     - job_result_12
    #     - job_result_13
    #     - job_result_14
    #     - job_result_15
    #     - job_result_16
    #     - job_result_17
    #     - job_result_18
    #     - job_result_19
    #     - job_result_20
    #     - job_result_21
    #     - job_result_22
    #     - job_result_23
    #     - job_result_24
    #     - job_result_25
    #     - job_result_26
    #     - job_result_27
    #     - job_result_28
    #     - job_result_29
    #     - job_result_30
    #     - job_result_31
    #     - job_result_32
    #     - job_result_33
    #     - job_result_34
    #     - job_result_35
    #
    # - name: "Copy error logs"
    #   ansible.builtin.copy:
    #     content: item.stderr
    #     dest: "/data/irdata18/logs/irdownload/{{ item.async_job.name }}.err.log"
    #     mode: "0644"
    #   until: item.finished
    #   loop:
    #     - job_result_1
    #     - job_result_2
    #     - job_result_3
    #     - job_result_4
    #     - job_result_5
    #     - job_result_6
    #     - job_result_7
    #     - job_result_8
    #     - job_result_9
    #     - job_result_10
    #     - job_result_11
    #     - job_result_12
    #     - job_result_13
    #     - job_result_14
    #     - job_result_15
    #     - job_result_16
    #     - job_result_17
    #     - job_result_18
    #     - job_result_19
    #     - job_result_20
    #     - job_result_21
    #     - job_result_22
    #     - job_result_23
    #     - job_result_24
    #     - job_result_25
    #     - job_result_26
    #     - job_result_27
    #     - job_result_28
    #     - job_result_29
    #     - job_result_30
    #     - job_result_31
    #     - job_result_32
    #     - job_result_33
    #     - job_result_34
    #     - job_result_35
    #

    # - name: Copy log files
    #   async_status:
    #     jid: "{{ item.ansible_job_id }}"
    #   copy:
    #     content: "{{ item.stdout }}"
    #     dest: "/data/irdata/logs/irdownload/{{ item.name }}.log"
    #   loop:
    #     - result_bind_translation
    #     - result_biogrid
    #     - result_corum
    #     - result_dip
    #     - result_hprd
    #     - result_intact
    #     - result_intcomplex
    #     - result_mpact
    #     - result_mppi
    #     - result_bar
    #     - result_bhf_ucl
    #     - result_hpidb
    #     - result_huri
    #     - result_imex
    #     - result_innatedb
    #     - result_matrixdb
    #     - result_mbinfo
    #     - result_mint
    #     - result_mpidb
    #     - result_quickgo
    #     - result_reactome
    #     - result_uniprotpp
    #     - result_virushost
    #     - result_psi_mi
    #     - result_taxonomy
    #     - result_athaliana
    #     - result_bind
    #     - result_dig
    #     - result_fly
    #     - result_gene
    #     - result_genpept
    #     - result_ipi
    #     - result_mmdb
    #     - result_pdb
    #     - result_refseq
    #     - result_uniprot
    #     - result_yeast
    #
    # - name: Copy error log files
    #   async_status:
    #     jid: "{{ item.ansible_job_id }}"
    #   copy:
    #     content: "{{ item.stderr }}"
    #     dest: "/data/irdata/logs/irdownload/{{ item.name }}.err.log"
    #   loop:
    #     - result_bind_translation
    #     - result_biogrid
    #     - result_corum
    #     - result_dip
    #     - result_hprd
    #     - result_intact
    #     - result_intcomplex
    #     - result_mpact
    #     - result_mppi
    #     - result_bar
    #     - result_bhf_ucl
    #     - result_hpidb
    #     - result_huri
    #     - result_imex
    #     - result_innatedb
    #     - result_matrixdb
    #     - result_mbinfo
    #     - result_mint
    #     - result_mpidb
    #     - result_quickgo
    #     - result_reactome
    #     - result_uniprotpp
    #     - result_virushost
    #     - result_psi_mi
    #     - result_taxonomy
    #     - result_athaliana
    #     - result_bind
    #     - result_dig
    #     - result_fly
    #     - result_gene
    #     - result_genpept
    #     - result_ipi
    #     - result_mmdb
    #     - result_pdb
    #     - result_refseq
    #     - result_uniprot
    #     - result_yeast
