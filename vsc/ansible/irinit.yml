---
- name: Irinit
  hosts: all
  become: true
  gather_facts: true # WE NEED THIS FOR THE 'ansible_distribution_release' VARIABLE

  tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - gnupg
        - python3-psycopg2
        - acl

    - name: Add PostgreSQL APT repository
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/pgdg.list
        line: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        state: present
        create: true
        mode: "0644"
      register: pgdg_repo

    - name: Install PostgreSQL APT key
      ansible.builtin.apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present
      register: pgdg_key

    - name: Remove apt cache
      ansible.builtin.file:
        path: /var/lib/apt/lists/
        state: absent
      when: pgdg_repo.changed or pgdg_key.changed

    - name: Re-create apt cache
      ansible.builtin.file:
        path: /var/lib/apt/lists/
        state: directory
        mode: "0755"
      register: apt_cache
      when: pgdg_repo.changed or pgdg_key.changed
      notify:
        - Clear APT cache
        - Update APT cache

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Install PostgreSQL
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - postgresql-14
        - postgresql-client-14

    - name: Ensure 'root' user exists with superuser privileges
      community.postgresql.postgresql_user:
        name: root
        role_attr_flags: SUPERUSER
        login_user: postgres
      become_user: postgres
      become: true
      register: whoami_output

    - name: Check if 'irdata18A' database exists
      community.postgresql.postgresql_query:
        login_user: postgres
        query: "SELECT datname FROM pg_database WHERE datname='irdata18A';"
        db: postgres
      become_user: postgres
      become: true
      register: irdata18a_db

    - name: Create 'irdata18A' database
      ansible.builtin.command: createdb irdata18A
      when: irdata18a_db.rowcount == 0
      changed_when: true

    - name: Create directory for irdata18A logs
      ansible.builtin.file:
        path: /data/irdata18/logs
        state: directory
        mode: "0755"

    - name: Check if 'irdata19' database exists
      community.postgresql.postgresql_query:
        login_user: postgres
        query: "SELECT datname FROM pg_database WHERE datname='irdata19';"
        db: postgres
      become_user: postgres
      become: true
      register: irdata19_db

    - name: Create 'irdata19' database in PostgreSQL
      ansible.builtin.command: createdb irdata19
      when: irdata19_db.rowcount == 0
      changed_when: true

    - name: Install Git
      ansible.builtin.apt:
        name: git
        state: present

    - name: Clone iRefIndex repository
      # noqa: latest
      ansible.builtin.git:
        repo: https://github.com/vibbits/irefindex.git
        dest: /home/irefindex

    - name: Create directories for irdata data and irdata logs
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - /home/irefindex/var/lib/irdata/data
        - /home/irefindex/var/log/irdata

    - name: Run irinit
      ansible.builtin.command: ./irinit --init
      args:
        chdir: /home/irefindex/usr/bin
      register: irinit_output
      when: irdata18a_db.rowcount == 0 or irdata19_db.rowcount == 0
      changed_when: true

  handlers:
    - name: Clear APT cache
      ansible.builtin.apt:
        autoclean: true

    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true
