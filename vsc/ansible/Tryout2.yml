---
- name: shellscript
  hosts: all
  gather_facts: true # WE NEED THIS HERE FOR THE DATES FOR THE LOGS!
  become: true
  vars_files:
    - ./vars/general.yml

  vars:
    local_source_directory: "/home/guest/internship/stage-VIB-irefindex/usr/bin"  # Directory containing the files on your local machine
    remote_destination_directory: "/home/irefindex/usr/bin"  # Destination directory on the remote machine
    ansible_python_interpreter: /usr/bin/python3  # Path to Python 3 interpreter


  tasks:
    - name: Copy shellscript.sh from local to remote
      ansible.builtin.copy:
        src: "{{ local_source_directory }}/shellscript.sh"
        dest: "{{ remote_destination_directory }}/shellscript.sh"

    - name: Copy pythonscript.py from local to remote
      ansible.builtin.copy:
        src: "{{ local_source_directory }}/pythonscript.py"
        dest: "{{ remote_destination_directory }}/pythonscript.py"

    - name: Install python3-venv package
      ansible.builtin.apt:
        name: python3-venv
        state: present

    - name: Create virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv "{{ download_data }}/venv"

    - name: Activate virtual environment
      ansible.builtin.command:
        cmd: "bash -c 'source /mnt/disks/data/venv/bin/activate'"

    - name: Install pip for Python 3
      apt:
        name: python3-pip
        state: present

    - name: Install irdata package
      pip:
        name: irdata
        state: present

    #- name: Install irdata package
    #  environment:
    #    python_interpreter: "{{ download_data }}/venv/bin/python3"   
    #  ansible.builtin.pip:
    #    name: irdata
    #    state: present

    - name: Find shellscript.sh and pythonscript.py files
      find:
        paths: /home/irefindex/usr/bin
        patterns: "shellscript.sh,pythonscript.py"
      register: files_to_update

    - name: Give execute permissions to shellscript.sh and pythonscript.py files
      file:
        path: "{{ item.path }}"
        mode: u+x,g+x,o+x
      loop: "{{ files_to_update.files }}"
      when: files_to_update.matched > 0

    - name: Execute shell script
      environment:
        python_interpreter: "{{ download_data }}/venv/bin/python3"
      command: "/home/irefindex/usr/bin/shellscript.sh"
    

#To do:
#- playbook:  making a venv, running a shell script
#- shellscript: set up use_python_interpreter, run python script
#- pythonscript: import irdata, print irdata version, print a stupid text