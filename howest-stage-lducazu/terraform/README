= Terraform

Infrastructure as Code (IaC) tool to create and manage cloud infrastructure.

Related cloud resources are organized in separate directories. Each of these groups of resources are
managed by a specific service account (robot).

To create a group of resources, `cd` into the appropriate directory and execute

  $ terraform init
  $ terraform apply

== boostrap

NOTE: Check the common configuration file first and change the file locations and region/zone and project name, too. 

IMPORTANT: the `bootstrap` part needs to be executed *first*, all other parts depend on it.

The `bootstrap` directory creates the Google Cloud project, creates the required service account and
stores their authentication information in the `secrets` directory. Finally, the parts of the Google
Cloud API that will be used, are activated.

This part needs to be runs as a _real_ user, with a Google account. Install the Google Cloud CLI
(https://cloud.google.com/sdk/docs/install) and generate the application default credentials (ADC):

  $ gcloud auth application-default login

20230817 minor changes to project.tf to enable Google API

== gce-vms

This directory contains the scripts that build the Google Compute Engine resources.
There are 2 disks, one for downloaded data and intermediate results (`dataext`) and another one
for the PostGreSQL database files (`pgdbdisk`).

There are also 2 virtual machines, one that runs a local PostGreSQL database instance (`build-vm`)
and another one to administer the Google cloud managed PostGreSQL instance (`access-vm`).

The data disk can be attached and mounted on each of the VMs.

== gcs-bucket

This directory contains the script to create Google Cloud Storage bucket `irefindex19`.
Users listed in the `external_users` variable (`config.tf`) have read-only access to the contents of the bucket.

To list the contents of the bucket:

  $ gsutil ls gs://irefindex19/

The `gsutil` tool is part of the Google Cloud CLI.

== irefdata-db

This directory contains the script to create and configure the managed PostGreSQL instance.
The appropriate database user and database are created as well.

== sourcerepo

This directory contains the script to create a git repository, accessible at
https://source.developers.google.com/p/irefindex/r/howest-stage.

Users listed in the `external_users` variable (`config.tf`) have read-only access to this git repo.
