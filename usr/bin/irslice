#!/bin/bash

# Copyright (C) 2011 Ian Donaldson <ian.donaldson@biotek.uio.no>
# Original author: Paul Boddie <paul.boddie@biotek.uio.no>
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -e "irdata-config" ]; then
    . "$PWD/irdata-config"
elif [ -e "scripts/irdata-config" ]; then
    . 'scripts/irdata-config'
else
    . 'irdata-config'
fi

if [ "$1" = '--help' ]; then
    cat 1>&2 <<EOF
Usage: $PROGNAME <filename> [ --lines ] ( - | <start> [ <length> ] )

Extract the content of the file with the given filename, starting at the
specified starting byte offset (which is a 1-based offset) and reading a slice
of the given length. If no length is given, the remainder of the file will be
read as the slice.

If the optional --lines flag is given, the start and length parameters will be
interpreted as a line offset and number of lines respectively.

If - is given instead of start and length arguments, then the start and length
values will be read from standard input. Again, the length argument can be
omitted to produce the remainder of the file.
EOF
    exit 1
fi

FILENAME=$1

if [ ! "$FILENAME" ]; then
    echo "$PROGNAME: No filename specified." 1>&2
    exit 1
fi

if [ ! -e "$FILENAME" ]; then
    echo "$PROGNAME: The specified file ($FILENAME) does not exist." 1>&2
    exit 1
fi

shift 1

if [ "$1" = '--lines' ]; then
    SLICEOPTS=-n
    shift 1
else
    SLICEOPTS=-c
fi

if [ "$1" = '-' ]; then
    read -r START LENGTH
else
    START=$1
    LENGTH=$2
fi

if [ ! "$START" ]; then
    echo "$PROGNAME: A start offset must be specified." 1>&2
    exit 1
fi

# NOTE: head with the -c option is not standard.

if [ "$LENGTH" ]; then
    SLICER="head $SLICEOPTS $LENGTH"
else
    SLICER="tee"
fi

  tail $SLICEOPTS +"$START" "$FILENAME" \
| eval "$SLICER"
