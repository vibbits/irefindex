#!/bin/bash

# Copyright (C) 2012, 2013 Ian Donaldson <ian.donaldson@biotek.uio.no>
# Original author: Paul Boddie <paul.boddie@biotek.uio.no>
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -e "irdata-config" ]; then
    . "$PWD/irdata-config"
elif [ -e "scripts/irdata-config" ]; then
    . 'scripts/irdata-config'
else
    . 'irdata-config'
fi

DATESTAMP=`date +%m-%d-%Y`
MITAB_COMPLETE_OUTPUT="$DATA/All.mitab.$DATESTAMP.txt"
MITAB_ORGANISM_OUTPUT="$DATA/{}.mitab.$DATESTAMP.txt"

if [ "$1" = '--help' ]; then
    cat 1>&2 <<EOF
Usage: $PROGNAME [ --mitab ] [ --irefscape ] [ --mapping ] [ --irefweb ]

When --mitab is specified, generate the complete MITAB output file...

$MITAB_COMPLETE_OUTPUT

...along with organism-specific files.

When --irefscape is specified, generate the iRefScape output file.

When --mapping is specified, generate the protein identifier mapping file.

When --irefweb is specified, generate the iRefWeb output files.
EOF
    exit 1
fi

if [ "$1" = '--mitab' ]; then
    MITAB=$1
    shift 1
fi

if [ "$1" = '--irefscape' ]; then
    IREFSCAPE=$1
    shift 1
fi

if [ "$1" = '--mapping' ]; then
    MAPPING=$1
    shift 1
fi

if [ "$1" = '--irefweb' ]; then
    IREFWEB=$1
    shift 1
fi



# Generate the complete MITAB output.

if [ "$MITAB" ]; then

    echo $DATESTAMP > "$DATA/mitab_date.txt"

    cp "$SQL/organisms.txt" "$DATA"

    if ! "$TOOLS/irdata_database_action.py" "$DATABASE" "$SQL/export_irefindex_mitab.sql" "$DATA" $PSQL_OPTIONS ; then
        echo "$PROGNAME: Could not generate MITAB data." 1>&2
        exit 1
    fi

    # Add the header to the complete file.

      cat "$SQL/mitab_header.txt" "$DATA/mitab_all" \
    > "$MITAB_COMPLETE_OUTPUT"

    # Use the organisms file to produce separate specific files.
    # Select the header line and lines containing each taxonomy identifier, removing
    # the taxonomy column.

    echo 'other' >> "$DATA/organisms.txt"

    # Put the header in each generated file.
    # Append the actual content to the header.

    # Tab character used in the xargs shell command.
    TAB=`printf '\t'`

      cat "$DATA/organisms.txt" \
    | xargs $XARGS_I'{}' sh -c "cp \"$SQL/mitab_header.txt\" \"$MITAB_ORGANISM_OUTPUT\" && grep -e \"^{}${TAB}\" \"$DATA/mitab_all_organisms\" | cut -f 2- >> \"$MITAB_ORGANISM_OUTPUT\""

fi

# Generate the protein identifier mapping.

if [ "$MAPPING" ]; then

    if ! "$TOOLS/irdata_database_action.py" "$DATABASE" "$SQL/export_protein_identifier_mapping.sql" "$DATA" $PSQL_OPTIONS ; then
        echo "$PROGNAME: Could not generate mapping file." 1>&2
        exit 1
    fi

    gzip -f "$DATA/mappings.txt"
fi

# Generate the iRefScape output.

if [ "$IREFSCAPE" ]; then

    if [ ! -e "$DATA/iRefScape" ]; then
        mkdir "$DATA/iRefScape"
    else
        rm "$DATA/iRefScape/"*
    fi

    if ! "$TOOLS/irdata_database_action.py" "$DATABASE" "$SQL/export_irefscape.sql" "$DATA/iRefScape" $PSQL_OPTIONS ; then
        echo "$PROGNAME: Could not generate iRefScape data." 1>&2
        exit 1
    fi

    if ! "$TOOLS/irdata_archive_irefscape.sh" "$DATA/iRefScape" "$DATA" ; then
        echo "$PROGNAME: Could not package iRefScape data in an archive." 1>&2
        exit 1
    fi

fi

# Generate the iRefWeb output.

if [ "$IREFWEB" ]; then

    if [ ! -e "$DATA/iRefWeb" ]; then
        mkdir "$DATA/iRefWeb"
    else
        rm "$DATA/iRefWeb/"*
    fi

    if ! "$TOOLS/irdata_database_action.py" "$DATABASE" "$SQL/export_irefweb.sql" "$DATA/iRefWeb" $PSQL_OPTIONS ; then
        echo "$PROGNAME: Could not generate iRefWeb data." 1>&2
        exit 1
    fi

fi
