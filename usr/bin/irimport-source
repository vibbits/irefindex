#!/bin/bash

# Copyright (C) 2011, 2012 Ian Donaldson <ian.donaldson@biotek.uio.no>
# Original author: Paul Boddie <paul.boddie@biotek.uio.no>
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -e "irdata-config" ]; then
    . "$PWD/irdata-config"
elif [ -e "scripts/irdata-config" ]; then
    . 'scripts/irdata-config'
else
    . 'irdata-config'
fi

if [ "$1" = '--help' ]; then
    cat 1>&2 <<EOF
Usage: $PROGNAME <source>

Import data from the specified source into the configured database. The
following sources are supported:

$ALLSOURCES

If the source is specified as - it is read from standard input.
EOF
    exit 1
fi

SOURCE=$1

if [ "$SOURCE" = '-' ]; then
    echo "$PROGNAME: Reading source name from standard input..." 1>&2
    read -r SOURCE
    echo "$PROGNAME: Using $SOURCE..." 1>&2
fi

if [ ! "$DATABASE" ]; then
    echo "$PROGNAME: A database must be configured first." 1>&2
    exit 1
fi

eval SOURCEDIR='$'"$SOURCE"_DIR_NAME
eval XMLFILEPATTERN='$'"$SOURCE"_XML_FILE_PATTERN

# Check for improper source names which don't map to directories.

if [ ! "$SOURCEDIR" ]; then
    echo "$PROGNAME: $SOURCE is not a valid source name." 1>&2
    exit 1
fi

IMPORTDATADIR="$DATA/import/$SOURCEDIR"

# Check for the source's import data directory.

if [ ! -e "$IMPORTDATADIR" ]; then
    echo "$PROGNAME: Source $SOURCE provides no import data directory." 1>&2
    exit 1
fi

# Import XML sources using a common template.

if [ "$XMLFILEPATTERN" ]; then
    if ! "$TOOLS/irdata_database_action.py" "$DATABASE" "$SQL/import_psixml.sql" "$IMPORTDATADIR" $PSQL_OPTIONS ; then
        echo "$PROGNAME: Import failed for XML files from $SOURCE." 1>&2
        exit 1
    fi
else
    eval TEMPLATE='$'"$SOURCE"_IMPORT_TEMPLATE
    eval SCHEMA='$'"$SOURCE"_SCHEMA
    source=$(echo $SOURCE | tr '[:upper:]' '[:lower:]')
    schema=${SCHEMA:-$source}
    TEMPLATE=${TEMPLATE:-"import_$schema.sql"}

    eval DEFS='$'"$SOURCE"_DEFS
    [[ -n ${DEFS} ]] && DEFS="--defs ${DEFS}"

    if ! "$TOOLS/irdata_database_action.py" "$DATABASE" "$SQL/$TEMPLATE" "$IMPORTDATADIR" $PSQL_OPTIONS $DEFS; then
        echo "$PROGNAME: Import failed for data files from $SOURCE." 1>&2
        exit 1
    fi
fi

echo $SOURCE
