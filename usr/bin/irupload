#!/bin/bash

# Copyright (C) 2012 Ian Donaldson <ian.donaldson@biotek.uio.no>
# Original author: Paul Boddie <paul.boddie@biotek.uio.no>
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -e "irdata-config" ]; then
    . "$PWD/irdata-config"
elif [ -e "scripts/irdata-config" ]; then
    . 'scripts/irdata-config'
else
    . 'irdata-config'
fi

if [ "$1" = '--help' ]; then
    cat 1>&2 <<EOF
Usage: $PROGNAME [ --upload ] [ --update-current ] <location> [ --mitab ] [ --irefscape ] [ --mapping ]

Upload output files to a specified location or modify the structure of the
uploaded data.

If --upload is specified, files will be copied to the specified location.

If --update-current is specified, a symbolic link will be updated to point to
the release directory containing the uploaded data.

For the location, only filesystem locations are supported. For example:

/var/www/irefindex

If --mitab is specified, the MITAB data will be uploaded.

If --irefscape is specified, the iRefScape data will be uploaded.

If --mapping is specified, the protein identifier mapping file will be uploaded.
EOF
    exit 1
fi

if [ "$1" = '--upload' ]; then
    UPLOAD=$1
    shift 1
fi

if [ "$1" = '--update-current' ]; then
    UPDATELINK=$1
    shift 1
fi

SITELOCATION=$1
shift 1

if [ ! "$SITELOCATION" ]; then
    echo "$PROGNAME: A site location must be specified." 1>&2
    exit 1
fi

if [ "$1" = '--mitab' ]; then
    MITAB=$1
    shift 1
fi

if [ "$1" = '--irefscape' ]; then
    IREFSCAPE=$1
    shift 1
fi

if [ "$1" = '--mapping' ]; then
    MAPPING=$1
    shift 1
fi



# Utility function.

makeoutputdir() {

    # In the given site location, update the given section, adding the specified
    # subdirectories.

    SITELOCATION=$1
    SECTION=$2
    shift 2
    SUBDIRS=$*

    # Each release's data resides in a directory resembling "release_10.0".

    RELEASEDIR="$SITELOCATION/$SECTION/archive/release_$RELEASE"

    if [ ! -e "$RELEASEDIR" ]; then
        mkdir -p "$RELEASEDIR"
    fi

    for SUBDIR in $SUBDIRS ; do
        if [ ! -e "$RELEASEDIR/$SUBDIR" ]; then
            mkdir -p "$RELEASEDIR/$SUBDIR"
        fi
    done
}

linkoutputdir() {

    # In the given site location, update the "current" symbolic link.

    SITELOCATION=$1
    SECTION=$2
    shift 2

    # Update the symbolic link if appropriate.

    CURRENT="$SITELOCATION/$SECTION/current"

    if [ -e "$CURRENT" ]; then
        rm "$CURRENT"
    fi
    ln -s "archive/release_$RELEASE" "$CURRENT"
}



# Upload the MITAB data.

if [ "$MITAB" ]; then
    makeoutputdir "$SITELOCATION" "data" "psi_mitab/MITAB2.6"

    # Copy the MITAB files.

    if [ "$UPLOAD" ]; then
        MITABDATE=`cat "$DATA/mitab_date.txt"`
        cp "$DATA/"*".mitab.$MITABDATE.txt" "$SITELOCATION/data/archive/release_$RELEASE/psi_mitab/MITAB2.6"
    fi

    # Update the symbolic link.

    if [ "$UPDATELINK" ]; then
        linkoutputdir "$SITELOCATION" "data"
    fi
fi

# Upload the mapping file.

if [ "$MAPPING" ]; then
    makeoutputdir "$SITELOCATION" "data" "Mappingfiles"

    # Copy the mapping file.

    if [ "$UPLOAD" ]; then
        cp "$DATA/mappings.txt.gz" "$SITELOCATION/data/archive/release_$RELEASE/Mappingfiles"
    fi

    # Update the symbolic link.

    if [ "$UPDATELINK" ]; then
        linkoutputdir "$SITELOCATION" "data"
    fi
fi

# Upload the Cytoscape data.

if [ "$IREFSCAPE" ]; then
    makeoutputdir "$SITELOCATION" "Cytoscape/plugin"

    # Copy the iRefScape archive.

    if [ "$UPLOAD" ]; then
        IREFSCAPEDATE=`cat "$DATA/iRefScape/irefscape_date.txt"`
        cp "$DATA/iRefDATA_$IREFSCAPEDATE.irfz" "$SITELOCATION/Cytoscape/plugin/archive/release_$RELEASE/"
    fi

    # Update the symbolic link.

    if [ "$UPDATELINK" ]; then
        linkoutputdir "$SITELOCATION" "Cytoscape/plugin"
    fi
fi
