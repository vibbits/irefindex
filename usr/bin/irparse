#!/bin/bash

# Copyright (C) 2011, 2012 Ian Donaldson <ian.donaldson@biotek.uio.no>
# Original author: Paul Boddie <paul.boddie@biotek.uio.no>
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -e "irdata-config" ]; then
    . "$PWD/irdata-config"
elif [ -e "scripts/irdata-config" ]; then
    . 'scripts/irdata-config'
else
    . 'irdata-config'
fi

if [ "$1" = '--help' ]; then
    cat 1>&2 <<EOF
Usage: $PROGNAME [ --fix | --check | --no-parse ] ( --all | <source>... )

Parse or just check data (and optionally fix ill-formed data) from the
different sources. These are configured to be the following when --all is
specified:

$ALLSOURCES

Sources that are to be excluded are defined to be the following:

$EXCLUDEDSOURCES
EOF
    exit 1
fi

if [ "$1" = '--fix' ]; then
    FIX=$1
    shift 1
fi

if [ "$1" = '--check' ]; then
    CHECK=$1
    shift 1
fi

if [ "$1" = '--no-parse' ]; then
    NO_PARSE=$1
    shift 1
fi

SOURCES=$*

if [ "$SOURCES" = '--all' ]; then
    SOURCES=$ALLSOURCES
elif [ ! "$SOURCES" ]; then
    echo "$PROGNAME: No sources specified." 1>&2
    exit 1
fi


# Exclude sources.

PARSESOURCES=

for SOURCE in $SOURCES ; do
    if ! isin "$SOURCE" $EXCLUDEDSOURCES ; then
        PARSESOURCES="${PARSESOURCES}${PARSESOURCES:+ }$SOURCE"
    fi
done

# The pipeline.
"$SCRIPTS/argument-per-line" $PARSESOURCES | "$SCRIPTS/irparallel" "\"$SCRIPTS/irparse-source\" $FIX $CHECK $NO_PARSE {}"